{"version":3,"sources":["NewUserModal.js","ModalSupport.js","Navigator.js","App.js","serviceWorker.js","index.js"],"names":["NewUserModal","useState","show","setShow","handleClose","Button","data-dismiss","className","style","backgroundColor","border","color","margin","padding","onClick","href","Modal","size","onHide","Header","closeButton","Title","Body","htmlFor","type","id","placeholder","Footer","float","variant","LoginModal","Navigator","paddingBottom","src","height","width","paddingRight","alt","data-toggle","data-target","App","paddingTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b5a3bb4b.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport LoginModal from './ModalSupport'\n\nconst NewUserModal = () => {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n            <Button data-dismiss= \"modal\" className=\" btn btn-primary-outline\" style={{backgroundColor: \"transparent\",\n                border: \"none\", color: \"#666666\", margin: \"0\", padding: \"0\"}}  onClick={handleShow}>\n                <a href={\"#\"} style= {{color: \"#666666\"}}>Sign up now! </a>\n            </Button>\n\n            <Modal size = \"lg\" show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>SignUp</Modal.Title>\n                </Modal.Header>\n                {/* eslint-disable-next-line react/no-unescaped-entities */}\n                <Modal.Body>\n                    <form>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-sm-4\">\n                                <label className=\"sr-only\" htmlFor=\"exampleInputEmail3\">Email address</label>\n                                <input type=\"email\" className=\"form-control form-control-sm mr-1\"\n                                       id=\"exampleInputEmail3\"\n                                       placeholder=\"Enter email\"/>\n                            </div>\n                            <div className=\"form-group col-sm-4\">\n                                <label className=\"sr-only\" htmlFor=\"exampleInputPassword3\">Password</label>\n                                <input type=\"password\" className=\"form-control form-control-sm mr-1\"\n                                       id=\"exampleInputPassword3\"\n                                       placeholder=\"Password\"/>\n                            </div>\n                            <div className=\"col-sm-auto\">\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\"/>\n                                    <label className=\"form-check-label\"> Remember me\n\n\n                                    </label>\n\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer className={\"loginFooter\"} >\n                    <span className={\"helpmeplease\"} style={{float: \"left\"}}>Already a member?<span><LoginModal/></span></span>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                    </Button>\n\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\nexport default NewUserModal;","import React, {useState} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport NewUserModal from './NewUserModal'\n\n\n\nfunction LoginModal() {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n            <Button data-dismiss= \"modal\" className=\"fa fa-sign-in btn btn-primary-outline\" style={{backgroundColor: \"transparent\",\n              border: \"none\", color: \"#000\"}}  onClick={handleShow}>\n                Login\n            </Button>\n\n            <Modal size = \"lg\" show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Login</Modal.Title>\n                </Modal.Header>\n                {/* eslint-disable-next-line react/no-unescaped-entities */}\n                <Modal.Body>\n                    <form>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-sm-4\">\n                                <label className=\"sr-only\" htmlFor=\"exampleInputEmail3\">Email address</label>\n                                <input type=\"email\" className=\"form-control form-control-sm mr-1\"\n                                       id=\"exampleInputEmail3\"\n                                       placeholder=\"Enter email\"/>\n                            </div>\n                            <div className=\"form-group col-sm-4\">\n                                <label className=\"sr-only\" htmlFor=\"exampleInputPassword3\">Password</label>\n                                <input type=\"password\" className=\"form-control form-control-sm mr-1\"\n                                       id=\"exampleInputPassword3\"\n                                       placeholder=\"Password\"/>\n                            </div>\n                            <div className=\"col-sm-auto\">\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\"/>\n                                    <label className=\"form-check-label\"> Remember me\n\n\n                                        </label>\n\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer className={\"loginFooter\"} >\n                    <span className={\"helpmeplease\"} style={{color: \"#666666\"}}>Not a member? <span>  <NewUserModal/></span></span>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                    </Button>\n\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\nexport default LoginModal;","import React, {useState} from 'react';\nimport LoginModal from './ModalSupport';\nconst Navigator = () => {\n    return (\n        <div>\n            <nav className=\"navbar navbar-light navbar-expand-sm fixed-top\" style={{paddingBottom: \"0px;\"}}>\n                <div className=\"container logocontainer\">\n                    <a href=\"./redoIndex.html\"><img src=\"./gifnewlogo.gif\" height=\"40px\" width=\"160px\" id=\"logoimg\"\n                                                    style={{paddingRight: \"20px\"}} alt=\"logo gif\"/></a>\n                    <button className=\"navbar-toggler \" type=\"button\" data-toggle=\"collapse\" data-target=\"#Navbar\">\n                        <span id=\"toggler\" className=\"navbar-toggler-icon newbutton\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"Navbar\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item\"><a className=\"nav-link\" href=\"./weather.html\"><span\n                                className=\"fa fa-home fa-lg\"></span> Home</a></li>\n                            <li className=\"nav-item\"><a className=\"nav-link\" href=\"./aboutus.html\"><span\n                                className=\"fa fa-info fa-lg\"></span> About</a></li>\n                            <li className=\"nav-item\"><a className=\"nav-link\" href=\"#\"><span\n                                className=\"fa fa-list fa-lg\"></span> Menu</a>\n                            </li>\n                            <li className=\"nav-item\"><a className=\"nav-link\" href=\"./contactus.html\"><span\n                                className=\"fa fa-address-card fa-lg\"></span> Contact</a></li>\n                            <li className=\"nav-item active\"><a className=\"nav-link\" href=\"weather.html\"><span\n                                className=\"fa fa-sun-o fa-lg\"></span> Weather</a></li>\n                        </ul>\n                        <span className=\"navbar-text\">\n                            <a data-toggle=\"modal\" data-target=\"#loginModal\">\n                                 <LoginModal/>\n                            </a>\n                        </span>\n                    </div>\n                </div>\n            </nav>\n        </div>\n\n    );\n};\nexport default Navigator();","import React from 'react';\nimport Navigator from './Navigator'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './newStyles.css';\n\n\n\nconst App = () => {\n\n    /*const minusOperator = () => {\n        console.log(\"I GOT IN HERE!!!\")\n        var num = +document.getElementById(\"num\").innerHTML;\n        num--;\n        document.getElementById(\"num\").innerHTML = num;\n    };\n    const plusOperator = () => {\n        var num = +document.getElementById(\"num\").innerHTML;\n        num++;\n        document.getElementById(\"num\").innerHTML = num;\n    };*/\n    return (\n        <div className=\"App\">\n\n            {/*<button onClick={minusOperator}>-</button>\n            <h2 id={\"num\"}>0</h2>\n            <button onClick={plusOperator}>+</button>*/}\n            {Navigator}\n            <header className=\"jumbotron\" style={{paddingBottom: \"0 px\"}}>\n                <div className=\"container\" style={{paddingTop: \"0 px\"}}>\n                    <div className=\"row row-header\">\n                        <div className=\"col-12 col-sm-6\">\n                            <h1>Weather Today</h1>\n                            {/* eslint-disable-next-line react/no-unescaped-entities */}\n                            <p>This segment of the website displays location's weather using a web API from\n                                openweathermap!</p>\n                        </div>\n\n                    </div>\n                </div>\n            </header>\n        </div>\n\n\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}